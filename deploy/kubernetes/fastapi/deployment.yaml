apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-app
  namespace: {{ .Values.namespace }}
  labels:
    app: fastapi
    environment: {{ .Values.environment }}
spec:
  replicas: {{ .Values.replicas.fastapi }}
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
        environment: {{ .Values.environment }}
    spec:
      imagePullSecrets:
      - name: ecr-registry-secret
      containers:
      - name: fastapi
        image: "{{ .Values.registry.url }}/mono-repo/fastapi:{{ .Values.image_tag }}"
        ports:
        - containerPort: 8000
        env:
        - name: ENV
          value: "{{ .Values.environment }}"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: riskdb_url
        - name: SNOWFLAKE_URL
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: snowflake_url
        resources:
          requests:
            cpu: {{ .Values.resources.fastapi.cpu }}
            memory: {{ .Values.resources.fastapi.memory }}
          limits:
            cpu: {{ .Values.resources.fastapi.limits.cpu }}
            memory: {{ .Values.resources.fastapi.limits.memory }}
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: {{ .Values.namespace }}
  labels:
    app: fastapi
    environment: {{ .Values.environment }}
spec:
  selector:
    app: fastapi
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  type: ClusterIP
