apiVersion: apps/v1
kind: Deployment
metadata:
  name: dash-app
  namespace: {{ .Values.namespace }}
  labels:
    app: dash
    environment: {{ .Values.environment }}
spec:
  replicas: {{ .Values.replicas.dash }}
  selector:
    matchLabels:
      app: dash
  template:
    metadata:
      labels:
        app: dash
        environment: {{ .Values.environment }}
    spec:
      imagePullSecrets:
      - name: ecr-registry-secret
      containers:
      - name: dash
        image: "{{ .Values.registry.url }}/mono-repo/dash:{{ .Values.image_tag }}"
        ports:
        - containerPort: 8050
        env:
        - name: ENV
          value: "{{ .Values.environment }}"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: riskdb_url
        - name: SNOWFLAKE_URL
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: snowflake_url
        resources:
          requests:
            cpu: {{ .Values.resources.dash.cpu }}
            memory: {{ .Values.resources.dash.memory }}
          limits:
            cpu: {{ .Values.resources.dash.limits.cpu }}
            memory: {{ .Values.resources.dash.limits.memory }}
        livenessProbe:
          httpGet:
            path: /
            port: 8050
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8050
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: dash-service
  namespace: {{ .Values.namespace }}
  labels:
    app: dash
    environment: {{ .Values.environment }}
spec:
  selector:
    app: dash
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8050
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dash-ingress
  namespace: {{ .Values.namespace }}
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  rules:
  - host: {{ .Values.dash.domain }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dash-service
            port:
              number: 80
